{"ast":null,"code":"var _jsxFileName = \"/Users/ohayoung/Projects/aa_practice/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'; // React Router를 사용할 경우\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = process.env.REACT_APP_BACKEND_URL;\nconst App = () => {\n  _s();\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [idToken, setIdToken] = useState(null);\n  const [authCode, setAuthCode] = useState(null);\n  const [idTokenInfo1, setIdTokenInfo1] = useState(null);\n  const [temp_acc, setTempAcc] = useState(null);\n  const [aa_addr, setAaAddr] = useState(null);\n  const [operation, setOperation] = useState('');\n  const [accountInfo, setAccountInfo] = useState('');\n\n  // toggle setting\n  const [showToken, setShowToken] = useState(false);\n  const toggleToken = () => {\n    setShowToken(!showToken);\n  };\n  const location = useLocation();\n  const navigate = useNavigate(); // useNavigate 훅 사용\n\n  useEffect(() => {\n    // URL 쿼리 파라미터에서 Authorization Code를 추출합니다.\n    const query = new URLSearchParams(location.search);\n    const code = query.get('auth_code'); // URL에서 auth_code를 추출\n\n    if (code) {\n      setAuthCode(code);\n      console.log('Authorization Code:', code);\n      // 인증 코드 처리 후 리디렉션\n      navigate('/', {\n        replace: true\n      }); // React Router를 통한 리디렉션\n    }\n    const intervalId = setInterval(() => {\n      setCurrentTime(Math.floor(Date.now() / 1000));\n    }, 1000);\n\n    // 컴포넌트가 언마운트될 때 인터벌을 클리어\n    return () => clearInterval(intervalId);\n  }, [location.search, navigate]);\n  const getAuthCode = clientId => {\n    const redirectUri = 'http://localhost:8080/callback';\n    const responseType = 'code'; // Authorization code flow\n    const scope = 'openid profile email'; // 요청할 범위\n    const accessType = 'offline'; // 리프레시 토큰을 포함하기 위한 옵션\n\n    const authUrl = `https://accounts.google.com/o/oauth2/auth?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=${responseType}&scope=${scope}&access_type=${accessType}`;\n    window.location.href = authUrl; // 구글 인증 페이지로 리디렉션\n  };\n  const issueToken = async () => {\n    console.log(\"issue token by code\", authCode);\n    try {\n      const tokenResponse = await fetch(api + '/auth/tokens', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: authCode\n        })\n      });\n      const res = await tokenResponse.json();\n      if (res.status === \"success\") {\n        console.log(\"id token & access token & refresh token issued\");\n        console.log(`access token : ${res.accessToken}`);\n        console.log(`refresh token : ${res.refreshToken}`);\n        setRefreshToken(res.refreshToken);\n        setAccessToken(res.accessToken);\n        setIdToken(res.idToken);\n        try {\n          const response = await fetch(api + '/auth/verify/idtoken/google', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              token: res.idToken\n            })\n          });\n          const data = await response.json();\n          console.log(data);\n          if (data.status === 'success') {\n            console.log(data.user);\n            setIdTokenInfo1(data.user);\n          } else {\n            console.error('Token verification failed');\n          }\n        } catch (error) {\n          console.error('Error verifying token:', error);\n        }\n        try {\n          console.log();\n          const response = await fetch(api + '/mitum/account/create', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          const data = await response.json();\n          console.log(data);\n          if (data.status === 'success') {\n            console.log(data.temp_acc, data.aa_address);\n            setTempAcc(data.temp_acc);\n            setAaAddr(data.aa_address);\n          } else {\n            console.error('failed to crete new account');\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      } else {\n        console.error('Failed to issue tokens:', res);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleLoginError = () => {\n    console.error('Login Failed');\n  };\n  const handleTransfer = async () => {\n    try {\n      const response = await fetch(api + '/mitum/account/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          expired_time: idToken.exp\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'success') {\n        console.log(data.operation);\n        setOperation(data.operation);\n      } else {\n        console.error('Token verification failed');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n  };\n  const handleGetInfo = async () => {\n    try {\n      console.log();\n      const response = await fetch(api + '/mitum/account/getinfo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'success') {\n        console.log(data.result);\n        setAccountInfo(data.result.data[0]);\n      } else {\n        console.error('failed to get account information');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Account Abstraction with Google OAuth 2.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current UTC Time: \", currentTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), idTokenInfo1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Expired Time: \" + idTokenInfo1.exp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\",\n          borderBottom: \"1px solid #aaa\",\n          lineHeight: \"0.1em\",\n          margin: \"10px 0 20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778 \\uD558\\uC5EC \\uACC4\\uC815 \\uC0DD\\uC131 \\u2B07\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAuthCode(process.env.REACT_APP_GOOGLE_CLIENT_ID),\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => issueToken(),\n          children: \"\\uACC4\\uC815 \\uC0DD\\uC131\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ID token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), idToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleToken,\n        style: {\n          cursor: 'pointer',\n          wordBreak: 'break-all'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black',\n            textDecoration: 'none',\n            border: 'none',\n            background: 'none'\n          },\n          children: !showToken ? idToken.slice(0, 120) + \"...\" : idToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Info from ID token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), idTokenInfo1 ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(idTokenInfo1, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Temp Account, AA Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Temp Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(temp_acc, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `AA Account: ${aa_addr}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetInfo,\n        children: \"Get Balance of AA account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), accountInfo ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(accountInfo, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTransfer,\n        children: \"Transfer using AA account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), operation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Operation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(operation, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yO+ooHHpegNNEJdO7WIBEbcXgbA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","api","process","env","REACT_APP_BACKEND_URL","App","_s","currentTime","setCurrentTime","Math","floor","Date","now","idToken","setIdToken","authCode","setAuthCode","idTokenInfo1","setIdTokenInfo1","temp_acc","setTempAcc","aa_addr","setAaAddr","operation","setOperation","accountInfo","setAccountInfo","showToken","setShowToken","toggleToken","location","navigate","query","URLSearchParams","search","code","get","console","log","replace","intervalId","setInterval","clearInterval","getAuthCode","clientId","redirectUri","responseType","scope","accessType","authUrl","window","href","issueToken","tokenResponse","fetch","method","headers","body","JSON","stringify","res","json","status","accessToken","refreshToken","setRefreshToken","setAccessToken","response","token","data","user","error","aa_address","handleLoginError","handleTransfer","expired_time","exp","handleGetInfo","result","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","textAlign","borderBottom","lineHeight","margin","onClick","REACT_APP_GOOGLE_CLIENT_ID","cursor","wordBreak","color","textDecoration","border","background","slice","_c","$RefreshReg$"],"sources":["/Users/ohayoung/Projects/aa_practice/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'; // React Router를 사용할 경우\n\nconst api = process.env.REACT_APP_BACKEND_URL;\n\nconst App = () => {\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [idToken, setIdToken] = useState(null);\n  const [authCode, setAuthCode] = useState(null);\n  const [idTokenInfo1, setIdTokenInfo1] = useState(null);\n  const [temp_acc, setTempAcc] = useState(null);\n  const [aa_addr, setAaAddr] = useState(null);\n  const [operation, setOperation] = useState('');\n  const [accountInfo, setAccountInfo] = useState('');\n\n  // toggle setting\n  const [showToken, setShowToken] = useState(false);\n  const toggleToken = () => { setShowToken(!showToken);};\n\n  const location = useLocation();\n  const navigate = useNavigate(); // useNavigate 훅 사용\n\n  useEffect(() => {\n    // URL 쿼리 파라미터에서 Authorization Code를 추출합니다.\n    const query = new URLSearchParams(location.search);\n    const code = query.get('auth_code'); // URL에서 auth_code를 추출\n\n    if (code) {\n      setAuthCode(code);\n      console.log('Authorization Code:', code);\n      // 인증 코드 처리 후 리디렉션\n      navigate('/', { replace: true }); // React Router를 통한 리디렉션\n    }\n\n    const intervalId = setInterval(() => {\n      setCurrentTime(Math.floor(Date.now() / 1000));\n    }, 1000);\n\n    // 컴포넌트가 언마운트될 때 인터벌을 클리어\n    return () => clearInterval(intervalId);\n  }, [location.search, navigate]);\n\n  const getAuthCode = (clientId) => {\n    const redirectUri = 'http://localhost:8080/callback';\n    const responseType = 'code'; // Authorization code flow\n    const scope = 'openid profile email'; // 요청할 범위\n    const accessType = 'offline'; // 리프레시 토큰을 포함하기 위한 옵션\n\n    const authUrl = `https://accounts.google.com/o/oauth2/auth?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=${responseType}&scope=${scope}&access_type=${accessType}`;\n\n    window.location.href = authUrl; // 구글 인증 페이지로 리디렉션\n  };\n\n  const issueToken = async () => {\n    console.log(\"issue token by code\", authCode)\n    try {\n      const tokenResponse = await fetch(api + '/auth/tokens', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ code: authCode })\n      });\n\n      const res = await tokenResponse.json();\n      if (res.status === \"success\") {\n        console.log(\"id token & access token & refresh token issued\");\n        console.log(`access token : ${res.accessToken}`);\n        console.log(`refresh token : ${res.refreshToken}`);\n        setRefreshToken(res.refreshToken);\n        setAccessToken(res.accessToken);\n        setIdToken(res.idToken);\n\n        try {\n          const response = await fetch(api + '/auth/verify/idtoken/google', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ token: res.idToken })\n          });\n    \n          const data = await response.json();\n          console.log(data);\n    \n          if (data.status === 'success') {\n            console.log(data.user)\n            setIdTokenInfo1(data.user);\n          } else {\n            console.error('Token verification failed');\n          }\n        } catch (error) {\n          console.error('Error verifying token:', error);\n        }\n    \n        try {\n          console.log()\n          const response = await fetch(api + '/mitum/account/create', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n          });\n    \n          const data = await response.json();\n          console.log(data);\n          if (data.status === 'success') {\n            console.log(data.temp_acc, data.aa_address);\n            setTempAcc(data.temp_acc);\n            setAaAddr(data.aa_address);\n          } else {\n            console.error('failed to crete new account');\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      } else {\n        console.error('Failed to issue tokens:', res);\n      }\n    } catch(error) {\n      console.error(error);\n    }\n  }\n\n  const handleLoginError = () => {\n    console.error('Login Failed');\n  };\n\n  const handleTransfer = async() => {\n    try {\n      const response = await fetch(api + '/mitum/account/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ expired_time: idToken.exp })\n      });\n\n      const data = await response.json();\n      console.log(data);\n\n      if (data.status === 'success') {\n        console.log(data.operation)\n        setOperation(data.operation);\n      } else {\n        console.error('Token verification failed');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n  }\n\n  const handleGetInfo = async() => {\n    try {\n      console.log()\n      const response = await fetch(api + '/mitum/account/getinfo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      });\n\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'success') {\n        console.log(data.result);\n        setAccountInfo(data.result.data[0]);\n      } else {\n        console.error('failed to get account information');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <div>\n          <h1>Account Abstraction with Google OAuth 2.0</h1>\n          <p>Current UTC Time: {currentTime}</p>\n          {idTokenInfo1 ? <p>{\"Expired Time: \" + idTokenInfo1.exp}</p> : <p></p>}\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            textAlign: \"center\",\n            borderBottom: \"1px solid #aaa\",\n            lineHeight: \"0.1em\",\n            margin: \"10px 0 20px\",\n          }}\n        >\n        </div>\n        <div>\n          <p>구글 로그인 하여 계정 생성 ⬇️</p>\n          <button onClick={() => getAuthCode(process.env.REACT_APP_GOOGLE_CLIENT_ID)}>\n            Login with Google\n          </button>\n          <button onClick={() => issueToken()}>\n            계정 생성하기\n          </button>\n          <br />\n        </div>\n      </div>\n      <div>\n        <h3>ID token</h3>\n        {idToken ? (\n          <div onClick={toggleToken} style={{ cursor: 'pointer', wordBreak: 'break-all' }}>\n            <span style={{ color: 'black', textDecoration: 'none', border: 'none', background: 'none' }}>\n              {!showToken ? idToken.slice(0, 120) + \"...\" : idToken}\n            </span>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <h3>User Info from ID token</h3>\n        {idTokenInfo1 ? <pre>{JSON.stringify(idTokenInfo1, null, 2)}</pre> : <p>null</p>}\n      </div>\n      <div>\n        <h3>Temp Account, AA Account</h3>\n        <div>\n          <p>Temp Account:</p>\n          <pre>{JSON.stringify(temp_acc, null, 2)}</pre>\n          <p>{`AA Account: ${aa_addr}`}</p>\n        </div>\n      </div>\n      <div>\n        <button onClick={handleGetInfo}>\n          Get Balance of AA account\n        </button>\n        {accountInfo ? <pre>{JSON.stringify(accountInfo, null, 2)}</pre> : <p>null</p>}\n      </div>\n      <div>\n        <button onClick={handleTransfer}>\n          Transfer using AA account\n        </button>\n        {operation ? (\n          <div>\n            <p>Operation</p>\n            <pre>{JSON.stringify(operation, null, 2)}</pre>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}