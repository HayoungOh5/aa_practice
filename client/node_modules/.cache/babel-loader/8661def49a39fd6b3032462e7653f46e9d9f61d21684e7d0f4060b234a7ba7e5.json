{"ast":null,"code":"var _jsxFileName = \"/Users/ohayoung/Projects/aa_practice/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom'; // React Router를 사용할 경우\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = process.env.REACT_APP_BACKEND_URL;\nconst App = () => {\n  _s();\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [idToken, setIdToken] = useState(null);\n  const [idTokenInfo1, setIdTokenInfo1] = useState(null);\n  const [temp_acc, setTempAcc] = useState(null);\n  const [aa_addr, setAaAddr] = useState(null);\n\n  // toggle setting\n  const [showToken, setShowToken] = useState(false);\n  const [showTokenInfo, setShowTokenInfo] = useState(false);\n  const toggleToken = () => {\n    setShowToken(!showToken);\n  };\n  const toggleTokenInfo = () => {\n    setShowTokenInfo(!showTokenInfo);\n  };\n  useEffect(() => {\n    // 1초마다 시간을 업데이트\n    const intervalId = setInterval(() => {\n      setCurrentTime(Math.floor(Date.now() / 1000));\n    }, 1000);\n\n    // 컴포넌트가 언마운트될 때 인터벌을 클리어\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Login handling\n  const handleLoginSuccess = async credentialResponse => {\n    console.log('Login Success:', credentialResponse);\n    const token = credentialResponse.credential;\n    setIdToken(token);\n    try {\n      const response = await fetch(api + '/auth/verify/idtoken/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: token\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'success') {\n        console.log(data.user);\n        setIdTokenInfo1(data.user);\n      } else {\n        console.error('Token verification failed');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n    try {\n      console.log();\n      const response = await fetch(api + '/mitum/account/create', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'success') {\n        console.log(data.temp_acc, data.aa_address);\n        setTempAcc(data.temp_acc);\n        setAaAddr(data.aa_address);\n      } else {\n        console.error('failed to crete new account');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleLoginError = () => {\n    console.error('Login Failed');\n  };\n  const verifyIdTokenByGoogle = async () => {\n    if (!idToken) {\n      console.error('No id token available');\n      return;\n    }\n    try {\n      const response = await fetch(api + '/auth/verify/idtoken/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: idToken\n        })\n      });\n      const data = await response.json();\n      if (data.status === 'success') {\n        console.log(data.user);\n        setIdTokenInfo1(data.user);\n      } else {\n        console.error('Token verification failed');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Account Abstraction with Google OAuth 2.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current UTC Time: \", currentTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), idTokenInfo1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Expired Time: \" + idTokenInfo1.exp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\",\n          borderBottom: \"1px solid #aaa\",\n          lineHeight: \"0.1em\",\n          margin: \"10px 0 20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778 \\uD558\\uC5EC \\uACC4\\uC815 \\uC0DD\\uC131 \\u2B07\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleLoginSuccess,\n          onError: handleLoginError\n          // useOneTap\n          ,\n          flow: \"auth-code\",\n          scope: \"openid profile email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ID token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: idToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleToken,\n          children: showToken ? idToken.slice(0, 120) + \"...\" : idToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 117\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Info from ID token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), idTokenInfo1 ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(idTokenInfo1, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Temp Account, AA Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Temp Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(temp_acc, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `AA Account: ${aa_addr}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ALfBCk+NINlOIfWOCBHV8w+4KK8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","api","process","env","REACT_APP_BACKEND_URL","App","_s","currentTime","setCurrentTime","Math","floor","Date","now","idToken","setIdToken","idTokenInfo1","setIdTokenInfo1","temp_acc","setTempAcc","aa_addr","setAaAddr","showToken","setShowToken","showTokenInfo","setShowTokenInfo","toggleToken","toggleTokenInfo","intervalId","setInterval","clearInterval","handleLoginSuccess","credentialResponse","console","log","token","credential","response","fetch","method","headers","body","JSON","stringify","data","json","status","user","error","aa_address","handleLoginError","verifyIdTokenByGoogle","children","fileName","_jsxFileName","lineNumber","columnNumber","exp","style","width","textAlign","borderBottom","lineHeight","margin","clientId","REACT_APP_GOOGLE_CLIENT_ID","onSuccess","onError","flow","scope","onClick","slice","_c","$RefreshReg$"],"sources":["/Users/ohayoung/Projects/aa_practice/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom'; // React Router를 사용할 경우\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n\nconst api = process.env.REACT_APP_BACKEND_URL;\n\nconst App = () => {\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [idToken, setIdToken] = useState(null);\n  const [idTokenInfo1, setIdTokenInfo1] = useState(null);\n  const [temp_acc, setTempAcc] = useState(null);\n  const [aa_addr, setAaAddr] = useState(null);\n\n  // toggle setting\n  const [showToken, setShowToken] = useState(false);\n  const [showTokenInfo, setShowTokenInfo] = useState(false);\n  const toggleToken = () => { setShowToken(!showToken);};\n  const toggleTokenInfo = () => { setShowTokenInfo(!showTokenInfo);};\n\n  useEffect(() => {\n    // 1초마다 시간을 업데이트\n    const intervalId = setInterval(() => {\n      setCurrentTime(Math.floor(Date.now() / 1000));\n    }, 1000);\n\n    // 컴포넌트가 언마운트될 때 인터벌을 클리어\n    return () => clearInterval(intervalId);\n  }, []);\n\n\n  // Login handling\n  const handleLoginSuccess = async (credentialResponse) => {\n    console.log('Login Success:', credentialResponse);\n    const token = credentialResponse.credential;\n    setIdToken(token);\n    \n    try {\n      const response = await fetch(api + '/auth/verify/idtoken/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token: token })\n      });\n\n      const data = await response.json();\n      console.log(data);\n\n      if (data.status === 'success') {\n        console.log(data.user)\n        setIdTokenInfo1(data.user);\n      } else {\n        console.error('Token verification failed');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n\n    try {\n      console.log()\n      const response = await fetch(api + '/mitum/account/create', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      });\n\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'success') {\n        console.log(data.temp_acc, data.aa_address);\n        setTempAcc(data.temp_acc);\n        setAaAddr(data.aa_address);\n      } else {\n        console.error('failed to crete new account');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleLoginError = () => {\n    console.error('Login Failed');\n  };\n\n  const verifyIdTokenByGoogle = async () => {\n    if (!idToken) {\n      console.error('No id token available');\n      return;\n    }\n\n    try {\n      const response = await fetch(api + '/auth/verify/idtoken/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token: idToken })\n      });\n\n      const data = await response.json();\n      if (data.status === 'success') {\n        console.log(data.user)\n        setIdTokenInfo1(data.user);\n      } else {\n        console.error('Token verification failed');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n\n}\n\n  return (\n    <div>\n      <div>\n        <div>\n          <h1>Account Abstraction with Google OAuth 2.0</h1>\n          <p>Current UTC Time: {currentTime}</p>\n          {idTokenInfo1 ? <p>{\"Expired Time: \" + idTokenInfo1.exp}</p> : <p></p>}\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            textAlign: \"center\",\n            borderBottom: \"1px solid #aaa\",\n            lineHeight: \"0.1em\",\n            margin: \"10px 0 20px\",\n          }}\n        >\n        </div>\n        <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n          <p>구글 로그인 하여 계정 생성 ⬇️</p>\n          <GoogleLogin\n            onSuccess={handleLoginSuccess}\n            onError={handleLoginError}\n            // useOneTap\n            flow=\"auth-code\"\n            scope=\"openid profile email\"\n          />\n          <br />\n        </GoogleOAuthProvider>\n      </div>\n      <div>\n        <h3>ID token</h3>\n        <div>\n          {idToken ? <button onClick={toggleToken}>{showToken ? idToken.slice(0, 120) + \"...\" : idToken}</button> : <div></div>}\n        </div>\n        <h3>User Info from ID token</h3>\n        {idTokenInfo1 ? <pre>{JSON.stringify(idTokenInfo1, null, 2)}</pre> : <p>null</p>}\n      </div>\n      <div>\n        <h3>Temp Account, AA Account</h3>\n        <div>\n          <p>Temp Account:</p>\n          <pre>{JSON.stringify(temp_acc, null, 2)}</pre>\n          <p>{`AA Account: ${aa_addr}`}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}